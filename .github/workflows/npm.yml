name: NPM

on:
  push:
    branches:
      - main

jobs:
  list-packages:
    name: NPM List Packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.list-packages.outputs.packages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: List Packages
        id: list-packages
        run: |
          echo "::set-output name=packages::$(
            npm ls --production --depth 1 -json |
            jq '.dependencies | map(.resolved[9:])' |
            node -p "JSON.stringify(JSON.parse(fs.readFileSync(0, 'utf-8')).map(directory => ({ ...require(directory + '/package.json'), directory })))" |
            jq '. as $parent | map({ directory, name, version, private, dependencies: $parent | map({ (.name): .version }) | add })' |
            node -p "JSON.stringify(JSON.parse(fs.readFileSync(0, 'utf-8')))"
          )"

  publish:
    name: NPM Publish
    runs-on: ubuntu-latest
    needs: list-packages
    strategy:
      matrix: ${{ fromJSON(needs.list-packages.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build
        working-directory: ${{ matrix.directory }}

      # - name: Configure NPM Credentials
      #   if: ${{ matrix.private == false }}
      #   run: npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: NPM Pre-Publish Checks
        if: ${{ matrix.private == false }}
        run: node -p "'IS_PUBLISHED=' + $(npm view ${{ matrix.name }} versions --json 2>/dev/null || echo "[]").includes('${{ matrix.version }}')" >> $GITHUB_ENV
        working-directory: ${{ matrix.directory }}

      - name: NPM Pre-Publish Prepare Package
        if: ${{ matrix.private == false && env.IS_PUBLISHED == 'false' }}
        run: node -e "dependencies = ${{toJSON(matrix.dependencies)}}; fs.writeFileSync('./package.json', fs.readFileSync('./package.json', 'utf-8').replace(new RegExp(`"(${Object.keys(dependencies).join('|')})":(\\s?)"\\*"`, 'g'), (_, $1, $2) => `"${$1}":${$2}"^${dependencies[$1]}"`))"
        working-directory: ${{ matrix.directory }}

      - name: Debug
        if: ${{ matrix.private == false && env.IS_PUBLISHED == 'false' }}
        run: cat package.json
        working-directory: ${{ matrix.directory }}

      - name: NPM Publish
        if: ${{ matrix.private == false && env.IS_PUBLISHED == 'false' }}
        run: echo npm --workspace=${{ matrix.name }} publish --access=public
        working-directory: ${{ matrix.directory }}
